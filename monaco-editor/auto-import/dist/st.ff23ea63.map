{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["conf","open","close","notIn","RegExp","language","token","include","bracket","next"],"mappings":"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","file":"st.ff23ea63.map","sourceRoot":"../demo","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['var', 'end_var'],\n        ['var_input', 'end_var'],\n        ['var_output', 'end_var'],\n        ['var_in_out', 'end_var'],\n        ['var_temp', 'end_var'],\n        ['var_global', 'end_var'],\n        ['var_access', 'end_var'],\n        ['var_external', 'end_var'],\n        ['type', 'end_type'],\n        ['struct', 'end_struct'],\n        ['program', 'end_program'],\n        ['function', 'end_function'],\n        ['function_block', 'end_function_block'],\n        ['action', 'end_action'],\n        ['step', 'end_step'],\n        ['initial_step', 'end_step'],\n        ['transaction', 'end_transaction'],\n        ['configuration', 'end_configuration'],\n        ['tcp', 'end_tcp'],\n        ['recource', 'end_recource'],\n        ['channel', 'end_channel'],\n        ['library', 'end_library'],\n        ['folder', 'end_folder'],\n        ['binaries', 'end_binaries'],\n        ['includes', 'end_includes'],\n        ['sources', 'end_sources']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '/*', close: '*/' },\n        { open: '\\'', close: '\\'', notIn: ['string_sq'] },\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.st',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to',\n        'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case',\n        'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at',\n        'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel',\n        'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname',\n        'copyright', 'summary', 'vendor', 'common_source', 'from'],\n    constant: ['false', 'true', 'null'],\n    defineKeywords: [\n        'var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global',\n        'var_access', 'var_external', 'end_var',\n        'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program',\n        'function', 'end_function', 'function_block', 'end_function_block',\n        'configuration', 'end_configuration', 'tcp', 'end_tcp', 'recource',\n        'end_recource', 'channel', 'end_channel', 'library', 'end_library',\n        'folder', 'end_folder', 'binaries', 'end_binaries', 'includes',\n        'end_includes', 'sources', 'end_sources',\n        'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'\n    ],\n    typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint',\n        'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string',\n        'bool', 'byte', 'world', 'dworld', 'array', 'pointer', 'lworld'],\n    operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**',\n        'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos',\n        'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit',\n        'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst',\n        'bitadr', 'is_valid'],\n    builtinVariables: [],\n    builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt',\n        'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig',\n        'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace',\n        'right', 'rtc'],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // C# style strings\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/(T|DT|TOD)#[0-9:-_shmyd]*/, 'tag'],\n            [/[A-Za-z]{1,6}#[0-9]*/, 'tag'],\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]*/, 'tag'],\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\n            [/(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]*/, 'predefined'],\n            [/[A_Za-z]*(_TO_)[A_Za-z]*/, 'predefined'],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@operators': 'operators',\n                        '@keywords': 'keyword',\n                        '@typeKeywords': 'type',\n                        '@defineKeywords': 'variable',\n                        '@constant': 'constant',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@whitespace' },\n            [/[;.]/, 'delimiter'],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/16#[0-9a-fA-F]+/, 'number.hex'],\n            [/2#[0-9_]+/, 'number.binary'],\n            [/\\d+/, 'number'],\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        comment2: [\n            [/[^\\(*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [\"\\\\*\\\\)\", 'comment', '@pop'],\n            [/[\\(*]/, 'comment']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\(\\*/, 'comment', '@comment2'],\n        ],\n        string_dq: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        string_sq: [\n            [/[^\\\\']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ]\n    }\n};\n"]}
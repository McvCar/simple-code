{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/less/less.js"],"names":["conf","open","close","notIn","RegExp","language","token","include","next","nextEmbedded"],"mappings":";AAIA,aAiCO,OAAA,eAAA,QAAA,cAAA,OAAA,IAhCA,IAAIA,EAAO,QAAA,MACD,YAAA,iDACH,UACQ,cAAC,KAAM,MACR,YAAA,MAEP,WACL,IAAK,MACL,IAAK,MACL,IAAK,MAEQ,mBACZC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aACzCF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aACzCF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aACzCF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,SAAU,aACzCF,KAAM,IAAMC,MAAO,IAAMC,OAAQ,SAAU,aAE/B,mBACZF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEhB,SACI,SACE,MAAA,IAAIE,OAAO,gDACb,IAAA,IAAIA,OAAO,2CAIjBC,EAAW,QAAA,UACJ,aAAA,GACA,aAAA,QACF,WAAA,sHACI,eAAA,0HACN,WACJJ,KAAM,IAAKC,MAAO,IAAKI,MAAO,oBAC9BL,KAAM,IAAKC,MAAO,IAAKI,MAAO,sBAC9BL,KAAM,IAAKC,MAAO,IAAKI,MAAO,0BAC9BL,KAAM,IAAKC,MAAO,IAAKI,MAAO,oBAEzB,WACD,OACAC,QAAS,mBACV,gBAAiB,KAChBA,QAAS,cACTA,QAAS,aACTA,QAAS,aACTA,QAAS,aACV,yCAA0C,iBAAkB,eAC5D,sBAAwBD,MAAO,MAAOE,KAAM,qBAC5C,eAAgB,cAChB,QAAS,cACT,mBAAoB,WACpB,IAAK,QACL,4BAA6B,YAAa,eAC1C,qBAAsB,cACtB,kBAAmB,QAClBD,QAAS,eACV,4BAA6B,WAAY,eACzC,iBAAkB,aAClB,IAAK,MAAO,aAEF,gBACV,KAAM,uBACN,KAAOD,MAAO,qBAAsBE,KAAM,eAAgBC,aAAc,qBAEhE,cACR,KAAOH,MAAO,qBAAsBE,KAAM,OAAQC,aAAc,UAE1D,YACN,6BAA8B,aAE1B,UACJ,qPAAsP,YAE3O,iBACVF,QAAS,aACV,YAAa,WACb,OAASD,MAAO,MAAOE,KAAM,UAEvB,YACLD,QAAS,mBACTA,QAAS,cACTA,QAAS,aACTA,QAAS,aACTA,QAAS,aACV,sBAAuB,kBAAmB,eAC1C,IAAK,WAAY,SACjB,cAAe,oBACdA,QAAS,eACV,iBAAkB,aAClB,SAAU,YAAa,SACvB,gBAAiB,cACjB,MAAO,YAAa,SACpB,QAAS,cACT,MAAO,KACP,IAAK,oBAEA,WACL,SAAU,UAAW,aACrB,YAAa,YAET,UACJ,SAAU,UAAW,SACrB,IAAK,YAED,UACJ,oCAAsCD,MAAO,yBAA0BE,KAAM,YAC7E,wBAAyB,wBAEvB,QACF,uFAAwF,uBAAwB,SAE5G,UACJ,OAASF,MAAO,mBAAoBE,KAAM,4BAC1C,OAAUF,MAAO,mBAAoBE,KAAM,sBAEzB,wBAClB,QAAS,WACT,KAAOF,MAAO,mBAAoBE,KAAM,aACxC,IAAK,WAEO,kBACZ,QAAU,WACV,KAAQF,MAAO,mBAAoBE,KAAM,aACzC,IAAK,WAED,UACHD,QAAS,cACTA,QAAS,aACV,OAAQ,cACR,SAAU,YAAa,SACvB,IAAK","file":"less.2c5ac415.map","sourceRoot":"../demo","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.less',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    identifierPlus: '-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@nestedJSBegin' },\n            ['[ \\\\t\\\\r\\\\n]+', ''],\n            { include: '@comments' },\n            { include: '@keyword' },\n            { include: '@strings' },\n            { include: '@numbers' },\n            ['[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))', 'attribute.name', '@attribute'],\n            ['url(\\\\-prefix)?\\\\(', { token: 'tag', next: '@urldeclaration' }],\n            ['[{}()\\\\[\\\\]]', '@brackets'],\n            ['[,:;]', 'delimiter'],\n            ['#@identifierPlus', 'tag.id'],\n            ['&', 'tag'],\n            ['\\\\.@identifierPlus(?=\\\\()', 'tag.class', '@attribute'],\n            ['\\\\.@identifierPlus', 'tag.class'],\n            ['@identifierPlus', 'tag'],\n            { include: '@operators' },\n            ['@(@identifier(?=[:,\\\\)]))', 'variable', '@attribute'],\n            ['@(@identifier)', 'variable'],\n            ['@', 'key', '@atRules']\n        ],\n        nestedJSBegin: [\n            ['``', 'delimiter.backtick'],\n            ['`', { token: 'delimiter.backtick', next: '@nestedJSEnd', nextEmbedded: 'text/javascript' }],\n        ],\n        nestedJSEnd: [\n            ['`', { token: 'delimiter.backtick', next: '@pop', nextEmbedded: '@pop' }],\n        ],\n        operators: [\n            ['[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]', 'operator']\n        ],\n        keyword: [\n            ['(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b', 'keyword']\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'tag', next: '@pop' }],\n        ],\n        attribute: [\n            { include: '@nestedJSBegin' },\n            { include: '@comments' },\n            { include: '@strings' },\n            { include: '@numbers' },\n            { include: '@keyword' },\n            ['[a-zA-Z\\\\-]+(?=\\\\()', 'attribute.value', '@attribute'],\n            ['>', 'operator', '@pop'],\n            ['@identifier', 'attribute.value'],\n            { include: '@operators' },\n            ['@(@identifier)', 'variable'],\n            ['[)\\\\}]', '@brackets', '@pop'],\n            ['[{}()\\\\[\\\\]>]', '@brackets'],\n            ['[;]', 'delimiter', '@pop'],\n            ['[,=:]', 'delimiter'],\n            ['\\\\s', ''],\n            ['.', 'attribute.value']\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment'],\n        ],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'attribute.value.number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringsEndDoubleQuote' }],\n            ['~?\\'', { token: 'string.delimiter', next: '@stringsEndQuote' }]\n        ],\n        stringsEndDoubleQuote: [\n            ['\\\\\\\\\"', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@popall' }],\n            ['.', 'string']\n        ],\n        stringsEndQuote: [\n            ['\\\\\\\\\\'', 'string'],\n            ['\\'', { token: 'string.delimiter', next: '@popall' }],\n            ['.', 'string']\n        ],\n        atRules: [\n            { include: '@comments' },\n            { include: '@strings' },\n            ['[()]', 'delimiter'],\n            ['[\\\\{;]', 'delimiter', '@pop'],\n            ['.', 'key']\n        ]\n    }\n};\n"]}
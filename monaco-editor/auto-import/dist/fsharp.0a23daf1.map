{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js"],"names":["conf","open","close","RegExp","language","token","include","next"],"mappings":";AAIA,aA+BO,OAAA,eAAA,QAAA,cAAA,OAAA,IA9BA,IAAIA,EAAO,QAAA,MACJ,UACO,YAAA,KACC,cAAC,KAAM,OAEf,WACL,IAAK,MACL,IAAK,MACL,IAAK,MAEQ,mBACZC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAEN,mBACZD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAMC,MAAO,MAEhB,SACI,SACE,MAAA,IAAIC,OAAO,0DACb,IAAA,IAAIA,OAAO,mEAIjBC,EAAW,QAAA,UACJ,aAAA,GACA,aAAA,MACJ,UACN,WAAY,MAAO,SAAU,KAC7B,SAAU,MAAO,OAAQ,QACzB,QAAS,UAAW,YACpB,QAAS,aAAc,cACvB,WAAY,QAAS,UACrB,WAAY,KAAM,OAAQ,WAC1B,SAAU,OAAQ,OAAQ,MAC1B,YAAa,QAAS,QAAS,WAC/B,SAAU,QAAS,UAAW,MAC9B,MAAO,WAAY,QAAS,UAC5B,SAAU,KAAM,KAAM,UAAW,UACjC,SAAU,YAAa,WAAY,OACnC,MAAO,MAAO,MAAO,OAAQ,OAAQ,MACrC,QAAS,SAAU,MAAO,SAAU,UACpC,YAAa,SAAU,QAAS,MAAO,MACvC,OAAQ,KAAM,OAAQ,KAAM,SAC5B,WAAY,UAAW,WAAY,UACnC,YAAa,OAAQ,SAAU,MAAO,SACtC,SAAU,SAAU,SAAU,MAAO,OACrC,KAAM,OAAQ,WAAY,QAC1B,MAAO,OAAQ,SAAU,MACzB,MAAO,OAAQ,UAAW,WAC1B,OAAQ,QAAS,OAAQ,SAGpB,QAAA,4BACA,QAAA,wEACM,cAAA,iBACF,YAAA,UAEF,WACD,OAED,gBACc,OACU,aAAEC,MAAO,cACV,WAAA,iBAItBC,QAAS,gBAEV,WAAY,eAEZ,oBAAqB,YAErB,aAAc,cACd,mBAAoB,cACpB,WAAY,cAEZ,uCAAwC,iBACxC,yCAA0C,iBAC1C,mBAAoB,iBACpB,iCAAkC,eAClC,2BAA4B,eAC5B,sBAAuB,WAEvB,QAAS,cAET,kBAAmB,mBACnB,MAAO,SAAU,gBACjB,IAAK,SAAU,cAEf,OAASD,MAAO,eAAgBE,KAAM,gBAEtC,aAAc,WACd,oBAAqB,SAAU,gBAAiB,YAChD,IAAK,mBAEE,aACP,aAAc,KACd,aAAc,UAAW,aACzB,UAAW,YAEP,UACJ,SAAU,YACV,OAAQ,UAAW,SACnB,KAAM,YAEH,SACH,UAAW,WACX,WAAY,kBACZ,MAAO,0BACP,aACc,OACQ,WAAEF,MAAO,SAAUE,KAAM,QACxB,WAAA,aAIjB,YACN,QAAS,WACT,KAAM,kBACN,KAAOF,MAAO,eAAgBE,KAAM","file":"fsharp.0a23daf1.map","sourceRoot":"../demo","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.fs',\n    keywords: [\n        'abstract', 'and', 'atomic', 'as',\n        'assert', 'asr', 'base', 'begin',\n        'break', 'checked', 'component',\n        'const', 'constraint', 'constructor',\n        'continue', 'class', 'default',\n        'delegate', 'do', 'done', 'downcast',\n        'downto', 'elif', 'else', 'end',\n        'exception', 'eager', 'event', 'external',\n        'extern', 'false', 'finally', 'for',\n        'fun', 'function', 'fixed', 'functor',\n        'global', 'if', 'in', 'include', 'inherit',\n        'inline', 'interface', 'internal', 'land',\n        'lor', 'lsl', 'lsr', 'lxor', 'lazy', 'let',\n        'match', 'member', 'mod', 'module', 'mutable',\n        'namespace', 'method', 'mixin', 'new', 'not',\n        'null', 'of', 'open', 'or', 'object',\n        'override', 'private', 'parallel', 'process',\n        'protected', 'pure', 'public', 'rec', 'return',\n        'static', 'sealed', 'struct', 'sig', 'then',\n        'to', 'true', 'tailcall', 'trait',\n        'try', 'type', 'upcast', 'use',\n        'val', 'void', 'virtual', 'volatile',\n        'when', 'while', 'with', 'yield'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /[uU]?[yslnLI]?/,\n    floatsuffix: /[fFmM]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [< attributes >].\n            [/\\[<.*>\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^#(if|else|endif)/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0x[0-9a-fA-F]+LF/, 'number.float'],\n            [/0x[0-9a-fA-F]+(@integersuffix)/, 'number.hex'],\n            [/0b[0-1]+(@integersuffix)/, 'number.bin'],\n            [/\\d+(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"\"\"/, 'string', '@string.\"\"\"'],\n            [/\"/, 'string', '@string.\"'],\n            // literal string\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            // characters\n            [/'[^\\\\']'B?/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\(\\*(?!\\))/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\*]+/, 'comment'],\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\*/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/(\"\"\"|\"B?)/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n    },\n};\n"]}
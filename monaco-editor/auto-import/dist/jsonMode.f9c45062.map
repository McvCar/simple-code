{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Promise","monaco","STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","Date","now","_getClient","editor","createWebWorker","languageId","diagnosticsOptions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","toShallowCancelPromise","then","client","_","withSyncedResources","p","completeCallback","errorCallback","r","c","e","Position","create","line","character","is","value","candidate","Is","defined","number","Range","one","two","three","four","start","end","Error","Location","uri","range","string","undefined","DiagnosticSeverity","Warning","Information","Hint","Diagnostic","message","severity","code","source","result","Command","title","command","args","TextEdit","replace","newText","insert","position","del","TextDocumentEdit","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","documentChanges","forEach","textDocumentEdit","textEditChange","changes","keys","key","defineProperty","getTextEditChange","TextDocumentIdentifier","version","TextDocumentItem","text","MarkupKind","PlainText","Markdown","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","InsertTextFormat","CompletionItem","label","CompletionList","items","isIncomplete","MarkedString","fromPlainText","plainText","ParameterInformation","documentation","SignatureInformation","parameters","DocumentHighlightKind","Read","Write","DocumentHighlight","kind","SymbolKind","Namespace","Package","String","Number","Boolean","Key","Null","SymbolInformation","name","containerName","CodeActionContext","diagnostics","typedArray","CodeLens","data","FormattingOptions","tabSize","insertSpaces","boolean","DocumentLink","target","EOL","TextDocument","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","substring","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","ls","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","modeId","handle","getModeId","onDidChangeContent","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","toDiagnostics","getModel","err","error","toSeverity","lsSeverity","MarkerSeverity","Info","diag","fromPosition","column","lineNumber","fromRange","startLineNumber","startColumn","endLineNumber","endColumn","toRange","toCompletionItemKind","mItemKind","languages","fromCompletionItemKind","toTextEdit","textEdit","toCompletionItem","entry","insertText","sortText","filterText","detail","fromMarkdownString","fromCompletionItem","item","insertTextFormat","CompletionAdapter","provideCompletionItems","token","getWordUntilPosition","wordInfo","wireCancellationToken","doComplete","info","isMarkupContent","thing","toMarkdownString","language","toMarkedStringArray","contents","HoverAdapter","provideHover","doHover","toLocation","location","parse","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","fromFormattingOptions","options","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","additionalTextEdits","promise","cancel","onCancellationRequested","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","scanString","ch_1","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","scanNextNonTrivia","isEOL","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","computeIndentLevel","eol","indentValue","getEOL","lineBreak","indentLevel","repeat","scanner","hasError","newLineAndIndent","scan","getTokenError","editOperations","addEdit","firstToken","firstTokenStart","getTokenOffset","initialIndent","firstTokenEnd","getTokenLength","secondToken","replaceContent","s","nChars","indexOf","getLocation","parseTree","findNodeAtLocation","getNodeValue","visit","stripComments","segments","earlyReturnException","previousNode","previousNodeInst","isAtPropertyKey","setPreviousNode","type","columnOffset","pop","getLiteralNodeType","sep","last","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","array","children","ensurePropertyComplete","parent","valueNode","root","path","node","path_1","segment","found","_a","_b","propertyNode","index","obj","prop","visitor","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","arg","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","getToken","parseString","isValue","getTokenValue","parseValue","parseArray","needsComma","parseObject","parseLiteral","JSON","replaceCh","parts","getPosition","join","removeProperty","setProperty","applyEdit","isWS","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","next","withFormatting","stringify","newProperty","insertIndex","removalIndex","toRemove","begin","edit_1","modify","formatter","parser","createTokenizationSupport","json","supportComments","JSONState","state","offsetDelta","stopAtOffset","tokenize","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_VALUE_NUMBER","TOKEN_PROPERTY_NAME","TOKEN_COMMENT_BLOCK","TOKEN_COMMENT_LINE","lastWasColon","_state","clone","equals","other","getStateData","setStateData","comments","numberOfInsertedCharacters","adjustOffset","substr","endState","tokens","setupMode","languageFeatures","disposables","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","open","close","notIn"],"mappings":"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","file":"jsonMode.f9c45062.map","sourceRoot":"../demo","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) {\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n"]}